# Copyright 2024 davlgd <1110600+davlgd@users.noreply.github.com>
# Distributed under the terms of the GNU General Public License v2

SCM_REPOSITORY="https://github.com/vlang/${PN}.git"
SCM_SECONDARY_REPOSITORIES="vc tcc"
SCM_vc_REPOSITORY="https://github.com/vlang/vc"
SCM_tcc_REPOSITORY="https://github.com/vlang/tccbin"

case "${PLATFORM}" in
  "amd64") SCM_tcc_BRANCH="thirdparty-linux-amd64" ;;
  "armv7") SCM_tcc_BRANCH="thirdparty-linux-arm" ;;
  "armv8") SCM_tcc_BRANCH="thirdparty-linux-aarch64" ;;
esac

require scm-git

SUMMARY="Simple, fast, safe, compiled language for developing maintainable software"
HOMEPAGE="https://vlang.io/"
DESCRIPTION="
V is a statically typed compiled programming language designed for building maintainable software.
It's similar to Go and its design has also been influenced by Oberon, Rust, Swift, Kotlin, and Python.
V is a very simple language. Going through this documentation will take you about a weekend, and by the end of it you will have pretty much learned the entire language.
The language promotes writing simple and clear code with minimal abstraction.
Despite being simple, V gives the developer a lot of power. Anything you can do in other languages, you can do in V.
"

UPSTREAM_CHANGELOG="https://github.com/vlang/v/blob/master/CHANGELOG.md [[ lang = en ]]"
UPSTREAM_DOCUMENTATION="
    https://github.com/vlang/v/blob/master/doc/docs.md [[ lang = en description = [ Documentation ] ]]
    https://modules.vlang.io/ [[ lang = en description = [ Standard Library ] ]]
"

LICENCES="MIT"
SLOT="0"
PLATFORMS="~amd64 ~armv7 ~armv8"
MYOPTIONS="platform: amd64 armv7 armv8"

DEFAULT_SRC_COMPILE_PARAMS="local=1"

src_prepare() {
  edo mv ../vc .
  edo mv ../tcc thirdparty/
  edo export VFLAGS="-cc $(exhost --tool-prefix)cc"
}

src_test() {
  edo export VTEST_SANDBOXED_PACKAGING=1 
  edo ./v test-self
}

src_install () {  
  
  insinto "/usr/$(exhost --target)/libexec/vlang/"
  doins "v.mod"

  local paths=(
    "cmd"
    "vlib"
    "thirdparty"
  )

  for p in "${paths[@]}"; do
    doins -r "${p}"
  done 

  exeinto "/usr/$(exhost --target)/libexec/vlang/"
  doexe "v"
  exeinto "/usr/$(exhost --target)/libexec/vlang/thirdparty/tcc/"
  doexe "thirdparty/tcc/tcc.exe"
  
  emagicdocs
  dodoc -r "doc"
  dodoc -r "examples"

  dodir /usr/$(exhost --target)/bin
  dosym ../libexec/vlang/v /usr/$(exhost --target)/bin/v
}
