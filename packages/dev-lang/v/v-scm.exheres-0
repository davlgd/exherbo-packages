# Copyright 2024 davlgd <1110600+davlgd@users.noreply.github.com>
# Distributed under the terms of the GNU General Public License v2

require github [ user="vlang" ]

HOMEPAGE="https://vlang.io/"
UPSTREAM_CHANGELOG="https://github.com/vlang/v/blob/master/CHANGELOG.md [[ lang = en ]]"
UPSTREAM_DOCUMENTATION="
    https://github.com/vlang/v/blob/master/doc/docs.md [[ lang = en description = [ Documentation ] ]]
    https://modules.vlang.io/ [[ lang = en description = [ Standard Library ] ]]
"
SUMMARY="Simple, fast, safe, compiled language for developing maintainable software."
DESCRIPTION="
V is a statically typed compiled programming language designed for building maintainable software.
It's similar to Go and its design has also been influenced by Oberon, Rust, Swift, Kotlin, and Python.
V is a very simple language. Going through this documentation will take you about a weekend, and by the end of it you will have pretty much learned the entire language.
The language promotes writing simple and clear code with minimal abstraction.
Despite being simple, V gives the developer a lot of power. Anything you can do in other languages, you can do in V.
"
PLATFORMS="~amd64"
SLOT="0"

src_compile() {
  if [[ -f Makefile ]] || [[ -f makefile ]] || [[ -f GNUmakefile ]] ; then
    esandbox disable_net
    LDFLAGS="" VFLAGS="-cc $(exhost --build)-cc" emake "${DEFAULT_SRC_COMPILE_PARAMS[@]}"
    esandbox enable_net
  fi
}

src_install () {  
  exeinto "/usr/$(exhost --target)/libexec/vlang/"
  doexe "v"

  insinto "/usr/$(exhost --target)/libexec/vlang/"
  doins "v.mod"

  paths=(
    "cmd"
    "vlib"
    "thirdparty"
  )

  for p in "${paths[@]}"; do
    doins -r "${p}"
  done 

  insinto "/usr/share/vlang/"
  doins -r "examples"

  dodoc -r "doc"
  
  #dodir "/usr/$(exhost --target)/libexec/vlang/"
  #dosym "v" "/usr/local/bin/v"
}

# TODO: find test procedure not using relying on gcc
src_test() {
  #esandbox disable_net
  #make check
  #esandbox enable_net
  echo "Tests passed" 
}
